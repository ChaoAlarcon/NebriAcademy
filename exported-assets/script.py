import pandas as pd

# Crear datos para las mejores pr√°cticas de dise√±o de academias online
data = {
    'Categor√≠a': [
        'Dise√±o Visual', 'Dise√±o Visual', 'Dise√±o Visual', 'Dise√±o Visual', 'Dise√±o Visual',
        'UX/UI', 'UX/UI', 'UX/UI', 'UX/UI', 'UX/UI',
        'Contenido', 'Contenido', 'Contenido', 'Contenido', 'Contenido',
        'Funcionalidad', 'Funcionalidad', 'Funcionalidad', 'Funcionalidad', 'Funcionalidad',
        'Tecnolog√≠a', 'Tecnolog√≠a', 'Tecnolog√≠a', 'Tecnolog√≠a', 'Tecnolog√≠a'
    ],
    'Elemento': [
        'Paleta de colores', 'Tipograf√≠a', 'Iconograf√≠a', 'Im√°genes', 'Branding',
        'Navegaci√≥n intuitiva', 'Dise√±o responsive', 'Accesibilidad', 'Velocidad de carga', 'Interface limpia',
        'Organizaci√≥n de cursos', 'Dashboard estudiante', 'Progreso visual', 'Biblioteca recursos', 'Contenido multimedia',
        'Sistema LMS', 'Pagos integrados', 'Certificaciones', 'Gamificaci√≥n', 'Comunicaci√≥n',
        'Hosting confiable', 'Seguridad de datos', 'Integraciones', 'Backup autom√°tico', 'Escalabilidad'
    ],
    'Descripci√≥n': [
        'Colores azules/verdes para tranquilidad y confianza', 
        'Fuentes legibles como Open Sans o Nunito',
        'Iconos consistentes y comprensibles',
        'Fotos de alta calidad que inspiren aprendizaje',
        'Identidad visual coherente en toda la plataforma',
        'M√°ximo 3 clics para llegar a cualquier contenido',
        'Adaptable a m√≥vil, tablet y escritorio',
        'Cumplir est√°ndares WCAG 2.1',
        'Tiempos de carga menores a 3 segundos',
        'Dise√±o minimalista que no distraiga del contenido',
        'Categorizaci√≥n clara y filtros efectivos',
        'Panel personalizado con progreso y tareas',
        'Barras de progreso y logros visuales',
        'Acceso f√°cil a materiales complementarios',
        'Videos, audios, PDFs, presentaciones interactivas',
        'Plataforma robusta como Moodle o LearnDash',
        'PayPal, Stripe, pasarelas locales',
        'Certificados descargables y verificables',
        'Puntos, insignias, rankings, desaf√≠os',
        'Foros, chat, mensajer√≠a directa',
        'Uptime del 99.9% con soporte 24/7',
        'SSL, encriptaci√≥n, cumplimiento GDPR',
        'APIs con herramientas de marketing y CRM',
        'Copias de seguridad diarias autom√°ticas',
        'Capacidad de crecimiento sin afectar rendimiento'
    ],
    'Prioridad': [
        'Alta', 'Alta', 'Media', 'Alta', 'Media',
        'Cr√≠tica', 'Cr√≠tica', 'Alta', 'Cr√≠tica', 'Alta',
        'Cr√≠tica', 'Alta', 'Media', 'Media', 'Alta',
        'Cr√≠tica', 'Alta', 'Media', 'Media', 'Alta',
        'Cr√≠tica', 'Cr√≠tica', 'Media', 'Alta', 'Media'
    ]
}

df = pd.DataFrame(data)

# Mostrar la tabla
print("=== MEJORES PR√ÅCTICAS PARA DISE√ëO DE ACADEMIAS ONLINE ===")
print()

# Agrupar por categor√≠a para mejor visualizaci√≥n
for categoria in df['Categor√≠a'].unique():
    print(f"üìã {categoria.upper()}")
    print("-" * 50)
    subset = df[df['Categor√≠a'] == categoria]
    
    for _, row in subset.iterrows():
        prioridad_emoji = {
            'Cr√≠tica': 'üî¥',
            'Alta': 'üü†', 
            'Media': 'üü°'
        }
        print(f"{prioridad_emoji[row['Prioridad']]} {row['Elemento']}")
        print(f"   ‚Üí {row['Descripci√≥n']}")
        print()
    print()

# Guardar como CSV
df.to_csv('mejores_practicas_academias_online.csv', index=False, encoding='utf-8')
print("‚úÖ Tabla guardada como 'mejores_practicas_academias_online.csv'")